{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"mockedThrowable"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ReturnType"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"parameters"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/MockSwift\/documentation\/MockSwift\/ParameterType","preciseIdentifier":"s:9MockSwift13ParameterTypea","text":"ParameterType"},{"kind":"text","text":"..., "},{"kind":"externalParam","text":"function"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":" = "},{"kind":"keyword","text":"#function"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"ReturnType"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The value computed by the behavior that match the call."}]}]},{"kind":"parameters","parameters":[{"name":"parameters","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Values passed to "},{"type":"codeVoice","code":"function"},{"type":"text","text":"."}]}]},{"name":"function","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Function where "},{"type":"codeVoice","code":"mockedThrowable"},{"type":"text","text":" is called."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You must use it during the extension of "},{"type":"codeVoice","code":"Mock"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["protocol CustomType {","  func doSomething(parameter1: String, parameter2: Bool) throws -> Int","}","extension Mock: CustomType where WrappedType == CustomType {","  func doSomething(parameter1: String, parameter2: Bool) throws -> Int {","    try mockedThrowable(parameter1, parameter2)","  }","}"]}]}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/mockswift\/mock\/mockedthrowable(_:function:)-7davs"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/MockSwift\/documentation\/MockSwift\/Mock\/mockedThrowable(_:function:)-7davs","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Records the "},{"type":"codeVoice","code":"function"},{"type":"text","text":" call with "},{"type":"codeVoice","code":"parameters"},{"type":"text","text":" and executes the predefined behavior."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"mockedThrowable"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ReturnType"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"ParameterType","preciseIdentifier":"s:9MockSwift13ParameterTypea"},{"kind":"text","text":"..., "},{"kind":"externalParam","text":"function"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"ReturnType"}],"title":"mockedThrowable(_:function:)","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","externalID":"s:9MockSwift0A0C15mockedThrowable_8functionqd__ypSgd_SStKlF","modules":[{"name":"MockSwift"}]},"hierarchy":{"paths":[["doc:\/\/MockSwift\/documentation\/MockSwift","doc:\/\/MockSwift\/documentation\/MockSwift\/Mock"]]},"references":{"doc://MockSwift/documentation/MockSwift":{"role":"collection","title":"MockSwift","abstract":[],"identifier":"doc:\/\/MockSwift\/documentation\/MockSwift","kind":"symbol","type":"topic","url":"\/documentation\/mockswift"},"doc://MockSwift/documentation/MockSwift/Mock/mockedThrowable(_:function:)-7davs":{"role":"symbol","title":"mockedThrowable(_:function:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"mockedThrowable"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ReturnType"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"ParameterType","preciseIdentifier":"s:9MockSwift13ParameterTypea"},{"kind":"text","text":"..., "},{"kind":"externalParam","text":"function"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"ReturnType"}],"abstract":[{"type":"text","text":"Records the "},{"type":"codeVoice","code":"function"},{"type":"text","text":" call with "},{"type":"codeVoice","code":"parameters"},{"type":"text","text":" and executes the predefined behavior."}],"identifier":"doc:\/\/MockSwift\/documentation\/MockSwift\/Mock\/mockedThrowable(_:function:)-7davs","kind":"symbol","type":"topic","url":"\/documentation\/mockswift\/mock\/mockedthrowable(_:function:)-7davs"},"doc://MockSwift/documentation/MockSwift/Mock":{"role":"symbol","title":"Mock","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Mock"}],"abstract":[],"identifier":"doc:\/\/MockSwift\/documentation\/MockSwift\/Mock","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Mock"}],"url":"\/documentation\/mockswift\/mock"},"doc://MockSwift/documentation/MockSwift/ParameterType":{"role":"symbol","title":"ParameterType","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParameterType"}],"abstract":[],"identifier":"doc:\/\/MockSwift\/documentation\/MockSwift\/ParameterType","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ParameterType"}],"url":"\/documentation\/mockswift\/parametertype"}}}